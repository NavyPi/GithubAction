name: Build & Test

on:
  push:
    branches:
    - '*'

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.x'              # set this to the dotnet version to use

jobs:
  build_and_test:
    name: 'Build & Test'

    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
        
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: Get FunctionApp publish profile
      id: publishprofile
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME }}
        appName: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME }}

    - name: Deploy FunctionApp
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ steps.publishprofile.outputs.profile }}

    - name: Reset FunctionApp publish profile
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME }}
        appName: ${{ secrets.RESOURCE_FUNCTIONAPP_NAME }}
        reset: true
